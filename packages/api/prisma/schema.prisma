// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Activity {
  promote
  sell
}

type PostDetails {
  heading   String
  body      String
  images    String[] @default([])
  salePrice Float?   @default(0)
}

type ProfileLinks {
  instgram String?
  linkedin String
  github   String?
  dribble  String
  behance  String?
  website  String
}

type UserDetails {
  first_name    String
  last_name     String
  headline      String
  about         String
  profile_links ProfileLinks
  profile_pic   String
}

model Comment {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  postId     String    @db.ObjectId
  post       Post      @relation(fields: [postId], references: [id])
  updated_at DateTime  @default(now()) @updatedAt
  created_at DateTime  @default(now())
  replies    Replies[]
}

model Replies {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  commentId  String   @db.ObjectId
  comment    Comment  @relation(fields: [commentId], references: [id])
  updated_at DateTime @default(now()) @updatedAt
  created_at DateTime @default(now())
}

model Post {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  activity   Activity
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @db.ObjectId
  details    PostDetails
  updated_at DateTime    @default(now()) @updatedAt
  created_at DateTime    @default(now())
  likes      Int         @default(0)
  comments   Comment[]
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  email      String       @unique
  newUser    Boolean      @default(true)
  details    UserDetails?
  posts      Post[]
  updated_at DateTime     @default(now()) @updatedAt
  created_at DateTime     @default(now())
}
